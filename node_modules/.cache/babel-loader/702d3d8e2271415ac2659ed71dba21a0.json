{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\gallery\\\\src\\\\Albums.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Albums extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n      albums: [],\n      photos: [],\n      userId: 0,\n      previewAlbumId: 0\n    };\n  }\n\n  componentDidMount() {\n    const urlUsers = 'https://jsonplaceholder.typicode.com/users';\n    const urlAlbums = 'https://jsonplaceholder.typicode.com/albums';\n    const urlPhotos = 'https://jsonplaceholder.typicode.com/photos';\n    axios(urlUsers).then(result => {\n      this.setState({\n        users: result.data\n      });\n    }, this);\n    axios(urlAlbums).then(result => {\n      this.setState({\n        albums: result.data\n      });\n    }, this);\n    axios(urlPhotos).then(result => {\n      this.setState({\n        photos: result.data\n      });\n    }, this);\n  }\n\n  render() {\n    const {\n      users\n    } = this.state;\n    const {\n      albums\n    } = this.state;\n    const {\n      photos\n    } = this.state;\n    const {\n      userId\n    } = this.state;\n    let that = this;\n    console.log(albums);\n    console.log(photos);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-albums\",\n      children: userId === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: users.map(function (item, i, array) {\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button-author\",\n            onClick: () => that._handleSelectAuthor(i),\n            children: item.name\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 24\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: albums.map(function (item, i, array) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: userId === item.userId ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button-author button-album\",\n              onClick: () => that._handleSelectAlbum(i),\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"button-album-preview\",\n                src: \"images/user/profile-icon.png\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 24\n              }, this), item.title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 18\n            }, this) : null\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 22\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n  _handleSelectAuthor(index) {\n    var users = this.state.users;\n    var albums = this.state.albums;\n    var photos = this.state.photos;\n    var userId = users[index].id;\n    this.setState({\n      userId: userId\n    });\n    let albumId;\n    albums.forEach(function (item, i, array) {\n      if (item.userId === userId) {\n        let previewUrl;\n        albumId = i + 1;\n        photos.forEach(function (photo, indx, array) {\n          if (photo.albumId === albumId) {\n            previewUrl = photo.thumbnailUrl;\n          }\n        });\n        console.log(previewUrl);\n        albums[i].previewUrl = previewUrl;\n      }\n    });\n    console.log(albums);\n  }\n\n  _handleSelectAlbum(index) {\n    console.log(index); // var users = this.state.users;\n    //  this.setState({ userId: users[index].id });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Administrator/gallery/src/Albums.js"],"names":["React","axios","Albums","Component","constructor","props","state","users","albums","photos","userId","previewAlbumId","componentDidMount","urlUsers","urlAlbums","urlPhotos","then","result","setState","data","render","that","console","log","map","item","i","array","_handleSelectAuthor","name","id","_handleSelectAlbum","title","index","albumId","forEach","previewUrl","photo","indx","thumbnailUrl"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class Albums extends React.Component {\r\n\t  constructor(props) {\r\n\t    super(props);\r\n\t    this.state = {\r\n\t      users: [],\r\n\t      albums: [],\r\n\t      photos: [],\r\n\t      userId: 0,\r\n\t      previewAlbumId: 0,\r\n\t    };\r\n\t  }\r\n\t  \r\n\t    componentDidMount() {\r\n\t    \t   const urlUsers= 'https://jsonplaceholder.typicode.com/users';\r\n\t    \t   const urlAlbums= 'https://jsonplaceholder.typicode.com/albums';\r\n\t    \t   const urlPhotos= 'https://jsonplaceholder.typicode.com/photos';\r\n\r\n\t    \t    axios(urlUsers).then(result => {\r\n\t    \t        this.setState({ users: result.data })\r\n\t    \t    }, this)\r\n\t    \t    \r\n\t    \t    axios(urlAlbums).then(result => {\r\n\t    \t        this.setState({ albums: result.data })\r\n\t    \t    }, this)\r\n\t    \t    \r\n\t    \t    axios(urlPhotos).then(result => {\r\n\t    \t        this.setState({ photos: result.data })\r\n\t    \t    }, this)\r\n\t    }\r\n\r\n\t  render() {\r\n   \t   const { users } = this.state;\r\n       const { albums } = this.state;\r\n       const { photos } = this.state;\r\n       const { userId } = this.state;\r\n   \t   let that = this;\r\n   \t   console.log(albums)\r\n   \tconsole.log(photos)\r\n   \t   \r\n\t    return (\r\n\t     <div className='main-albums'>\r\n\t     { userId === 0 ? <div>\r\n           {users.map(function (item, i, array) {\r\n            return <button key={ item.id} \r\n                     className='button-author'\r\n                     onClick = { () => that._handleSelectAuthor(i) }>        \r\n                      { item.name } \r\n              </button>\r\n            })} \r\n          </div> : <div>\r\n           {albums.map(function (item, i, array) {\r\n              return <div key={ item.id}>\r\n               { userId === item.userId ?  \r\n                 <button  \r\n                      className='button-author button-album'\r\n                       onClick = { () => that._handleSelectAlbum(i) }>   \r\n                       <img \r\n                        className='button-album-preview' \r\n                         src='images/user/profile-icon.png'/>\r\n                        { item.title } \r\n                 </button> : null }\r\n              </div>\r\n           })} \r\n          </div>\r\n\t     }\r\n\t     </div>\r\n\t    );\r\n\t  }\r\n\t  \r\n\t  _handleSelectAuthor(index) {\r\n\t\t  var users = this.state.users;\r\n\t\t  var albums = this.state.albums;\r\n\t\t  var photos = this.state.photos;\r\n\t\t  var userId = users[index].id;\r\n\t\t  this.setState({ userId: userId });\r\n\t\t  let albumId;\r\n\t\t  albums.forEach(function(item, i, array) {\r\n      \t    if (item.userId === userId) {\r\n      \t      let previewUrl;\r\n      \t      albumId = i + 1;\r\n      \t      photos.forEach(function(photo, indx, array) {\r\n            \t if (photo.albumId === albumId) {\r\n            \t\t previewUrl = photo.thumbnailUrl;\r\n            \t }\r\n              });\r\n      \t      console.log(previewUrl)\r\n      \t     albums[i].previewUrl = previewUrl;\r\n      \t    }\r\n          });\r\n\t\t  console.log(albums)\r\n\t  }\r\n\t  \r\n\t  _handleSelectAlbum(index) {\r\n\t\t  console.log(index)\r\n\t\t // var users = this.state.users;\r\n\t\t//  this.setState({ userId: users[index].id });\r\n\t  }\r\n}\r\n\t"]},"metadata":{},"sourceType":"module"}